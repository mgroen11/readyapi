<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="03d31a04-1a56-4a1f-b512-eb126c94a40f" created="2.5.0" activeEnvironment="Default environment" name="API tests for Voogd&amp;Voogd" resourceRoot="" updated="2.5.0-m-SNAPSHOT" abortOnError="false" runType="SEQUENTIAL" soapui-version="5.4.0" encryptionMode="Not encrypted" compositeProjectFormat="1.3" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="IncludeOverview">true</con:setting>
    <con:setting id="IncludeResults">true</con:setting>
    <con:setting id="FlowLayout">true</con:setting>
    <con:setting id="ErrorDetails">true</con:setting>
    <con:setting id="IncludeCoverage">true</con:setting>
    <con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.ProTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Report Format(s)" value="XML"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Slack Channel(s)" value=""/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Test Suite Tags" value=""/>
  <con:entry key="Select Report Type" value="JUnit-Style report for automation"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Test Suite" value="1. TestSuite for ClausuleWebAPI"/>
  <con:entry key="Run in-process" value="false"/>
  <con:entry key="Password" value=""/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Test Case Tags" value=""/>
  <con:entry key="Export JUnit Results with test properties" value="false"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Test Case" value="1.2. valide waarde (niet bestaand clausuleID)"/>
  <con:entry key="Slack Access Token" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Username" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value="C:\Program Files\SmartBear\ReadyAPI-2.5.0-m-SNAPSHOT\bin"/>
  <con:entry key="Environment" value="Default environment"/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="Root Folder" value="${WORKSPACE}"/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Save Project" value="false"/>
</xml-fragment>]]></con:setting>
    <con:setting id="03d31a04-1a56-4a1f-b512-eb126c94a40ffileName">Project-2-readyapi-project</con:setting>
  </con:settings>
  <con:vcsConfiguration>
    <con:vcsName>Git</con:vcsName>
    <con:repositoryIdentifier>https://github.com/mgroen11/readyapi</con:repositoryIdentifier>
  </con:vcsConfiguration>
  <con:savedRecentRuns>1</con:savedRecentRuns>
  <con:requirements>
    <con:requirement>
      <con:id>1</con:id>
      <con:name>Scenario</con:name>
      <con:description>short desc</con:description>
      <con:status>In Scope</con:status>
      <con:details/>
      <con:links/>
      <con:testCases>
        <con:entry>38f909ed-fc0e-4474-a2a2-cc2619188844</con:entry>
      </con:testCases>
    </con:requirement>
    <con:requirement>
      <con:id>2</con:id>
      <con:name>Scenario</con:name>
      <con:description>short desc</con:description>
      <con:status>In Scope</con:status>
      <con:details/>
      <con:links/>
      <con:testCases>
        <con:entry>c6c65292-2370-4766-80d2-3c6a71043a29</con:entry>
        <con:entry>b352cbed-eae5-4977-9ffd-bb8e218d2eac</con:entry>
      </con:testCases>
    </con:requirement>
    <con:requirement>
      <con:id>3</con:id>
      <con:name>Scenario</con:name>
      <con:description>short desc</con:description>
      <con:details/>
      <con:links/>
      <con:testCases>
        <con:entry>ca5ab82f-fcd8-459c-b690-a22fa2476178</con:entry>
      </con:testCases>
    </con:requirement>
  </con:requirements>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer>
    <con:databaseConnection>
      <con:name>connection_config</con:name>
      <con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver>
      <con:connectionString>jdbc:sqlserver://smhosql04.ontwikkel.com:1433;databaseName=VIA;user=WebSqlUser;password=PASS_VALUE</con:connectionString>
      <con:password>OftWSuG4</con:password>
      <con:connectionProperties/>
    </con:databaseConnection>
  </con:databaseConnectionContainer>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to SoapUI Pro tests

// If hardcoding the token, uncomment and change line 5
// def token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// def token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// def headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:authRepository/>
  <con:tags/>
  <con:sensitiveInformation/>
</con:soapui-project>
