<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="b352cbed-eae5-4977-9ffd-bb8e218d2eac" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="1.4. geen ClausuleID" searchProperties="true" timeout="0" maxResults="0" xmlns:con="http://eviware.com/soapui/config">
  <con:description>2. Scenario: executing a call to the ClausuleWebAPI with a non existing Clausulenr as parameter

Given the ClausuleWebAPI is online
And the database containing the clausulenr is online
When a http call to the ClausuleWebAPI is executed with a non-existing Clausulenr as parameter
Then the response code is 404 (Not found)
And the response body contains .... [TBD]
(And the duration of the response does not exceed xxxx ms)

URL:
http://atlas4.ontwikkel.com/ClausuleWebApi/api/v1/clausules/{clausuleid}</con:description>
  <con:settings>
    <con:setting id="b352cbed-eae5-4977-9ffd-bb8e218d2eacfileName">1.4.-geen-ClausuleID</con:setting>
  </con:settings>
  <con:savedRecentRuns>1</con:savedRecentRuns>
  <con:testStep type="httprequest" name="1.4.1 Get request zonder clausuleID" id="2da81df3-81b9-4bfa-b62b-9c04504b90a3">
    <con:settings/>
    <con:config method="GET" xsi:type="con:HttpRequest" id="157cccfd-a8a0-491b-bae7-fa73c314db4e" name="1.4.1 Get request zonder clausuleID" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
      </con:settings>
      <con:endpoint>http://atlas4.ontwikkel.com/ClausuleWebApi/api/v1/clausules/{clausuleid}</con:endpoint>
      <con:request/>
      <con:assertion type="Valid HTTP Status Codes" id="eb370bab-fbc5-411e-ac51-7ae15f75c5fa" name="Valid HTTP Status Codes">
        <con:settings/>
        <con:configuration>
          <codes>404</codes>
        </con:configuration>
      </con:assertion>
      <con:assertion type="Response SLA Assertion" id="27971df0-d41d-4987-ad70-78f2bce5c0f3" name="Response SLA">
        <con:configuration>
          <SLA>200</SLA>
        </con:configuration>
      </con:assertion>
      <con:assertion type="Simple Contains" id="2ab43d58-76d6-4b40-8174-47d39c82f79d" name="Contains">
        <con:configuration>
          <token>Server Error</token>
          <ignoreCase>true</ignoreCase>
          <useRegEx>false</useRegEx>
        </con:configuration>
      </con:assertion>
      <con:assertion type="Sensitive Information Exposure" id="017e6c50-0f8c-435b-94f5-f1390ae0599d" name="Sensitive Information Exposure">
        <con:configuration>
          <AssertionSpecificExposureList>~(?s).*Runtime (E|e)rror.*###[Stacktrace] Can give hackers information about which software or language you are using</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*SQLSTATE: [A-Z0-9].*###[Database error messages] Internal database information can be misused by hackers</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*(s|S)tack:.*###[Stacktrace] Can give hackers information about which software or language you are using</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*(s|S)yntax (e|E)rror\s.*###[Stacktrace] Can give hackers information about which software or language you are using</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*\w+/\d{1,2}(\.\d{1,3})+.*###[Version x.y.z] Exposing version numbers gives
            unnecessary hints on your systems vulnerabilities</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*Invalid column name\s.*###[Database error messages] Internal database information can be misused by hackers</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*
            (ORA|EXP|IMP|KUP|UDE|UDI|DBV|LCD|QSM|OCI|RMAN|LFI|PLS|PLQ|AMD|CLSR|PROC|PROT|TNS|NNC|NLP|NNF|NMP|NCR|NZE|O2F|O2I|O2U|PCB|PCC|SQL|AUD|IMG|VID|DRG|LPX|LSX)-\d{5}\s
        .*###[Database error messages] Internal database information can be misused by hackers</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*(p|P)owered by:? ([a-zA-Z]+)( [a-zA-Z]+){0,3}( |/)\d\.\d{1,2}\.\d{1,3}.*###[Version x.y.z] Exposing version numbers gives
            unnecessary hints on your systems vulnerabilities</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*at [\w\$]+(\.[\w\$&lt;>\[\],]+|\.\.ctor)+(\((([\w\$&lt;>\`\[\]]+ [\w\$&lt;>]+, )*(([\w\$&lt;>\`\[\]]+
            [\w\$&lt;>]+)))\)|\(\))
        .*###[Stacktrace] Can give hackers information about which software or language you are using</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*&lt;\w+:frame\s*class=".*"\s*line=".*"\s*method=".*"\s*/>.*###[Stacktrace] Can give hackers information about which software or language you are using</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*Traceback \(most recent call last\):.*###[Stacktrace] Can give hackers information about which software or language you are using</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*((I|i)ncorrect|(I|i)nvalid) (s|S)yntax.*###[Stacktrace] Can give hackers information about which software or language you are using</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*(s|S)tack ?(t|T)race.*###[Stacktrace] Can give hackers information about which software or language you are using</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*(e|E)rror was:\s.*###[Database error messages] Internal database information can be misused by hackers</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*(v|V)ersion:? \d\.\d{1,2}\.{1,3}-?.*###[Version x.y.z] Exposing version numbers gives
            unnecessary hints on your systems vulnerabilities</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*from [\w\$]+(\.[\w\$&lt;>]+)+:\d+:in `.+'.*###[Stacktrace] Can give hackers information about which software or language you are using</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*Error in process &lt;\d+\.\d+\.\d+> with exit value:.*###[Stacktrace] Can give hackers information about which software or language you are using</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*STACK\s?TRACE.*###[Stacktrace] Can give hackers information about which software or language you are using</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*Warning: [\w]+\(\) .+ in .+ on line \d{1,6}.*###[Stacktrace] Can give hackers information about which software or language you are using</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*((A|a)pache|vBulletin|MySQL|PostgreSQL|phpBB|Internet Information Services)( |/)\d{1,2}(\.\d{1,3})+
        .*###[Version x.y.z] Exposing version numbers gives
            unnecessary hints on your systems vulnerabilities</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*at [a-zA-Z][\w\$]*(\.[a-zA-Z][\w\$]*)+\((Unknown Source|Native
            Method|[a-zA-Z][\w\$]*\.([a-zA-Z]{3,5}):\d+)\)
        .*###[Stacktrace] Can give hackers information about which software or language you are using</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*[^\s]+\.rb:\d+:in `.+'.*###[Stacktrace] Can give hackers information about which software or language you are using</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*File ".+", line [0-9]{1,6}, in.*###[Stacktrace] Can give hackers information about which software or language you are using</AssertionSpecificExposureList>
          <IncludeProjectSpecific>true</IncludeProjectSpecific>
          <IncludeGlobal>false</IncludeGlobal>
        </con:configuration>
      </con:assertion>
      <con:credentials>
        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
        <con:authType>No Authorization</con:authType>
      </con:credentials>
      <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
      <con:jmsPropertyConfig/>
      <con:parameters>
        <con:parameter>
          <con:name>clausuleid</con:name>
          <con:value/>
          <con:style>TEMPLATE</con:style>
          <con:default/>
        </con:parameter>
      </con:parameters>
    </con:config>
  </con:testStep>
  <con:properties/>
  <con:reportParameters/>
  <con:breakPoints>
    <con:testStepId>26fa287f-f249-410c-86d5-a850c3d65b9a</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
</con:testCase>
