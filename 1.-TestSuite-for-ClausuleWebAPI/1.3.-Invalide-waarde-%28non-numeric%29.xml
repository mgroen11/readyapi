<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="ca5ab82f-fcd8-459c-b690-a22fa2476178" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="1.3. Invalide waarde (non numeric)" searchProperties="true" timeout="0" maxResults="0" xmlns:con="http://eviware.com/soapui/config">
  <con:description>3. Scenario: executing a call to the ClausuleWebAPI with incorrect format as parameter

Given the ClausuleWebAPI is online
When a http call to the ClausuleWebAPI is executed with non correct data as parameter (for example a randomized string of data)
Then the response code is 400 (Bad request)
And the response body contains the text "The request is invalid"
(And the duration of the response does not exceed xxxx ms)

URL:
http://atlas4.ontwikkel.com/ClausuleWebApi/api/v1/clausules/{clausuleid}</con:description>
  <con:settings>
    <con:setting id="ca5ab82f-fcd8-459c-b690-a22fa2476178fileName">1.3.-Invalide-waarde-%28non-numeric%29</con:setting>
  </con:settings>
  <con:savedRecentRuns>1</con:savedRecentRuns>
  <con:testStep type="httprequest" name="1.3.1 Ophalen ClausuleID met randomstring" id="34e90454-0d7f-4cda-ab7d-72edf57c17d2">
    <con:settings/>
    <con:config method="GET" xsi:type="con:HttpRequest" id="157cccfd-a8a0-491b-bae7-fa73c314db4e" name="1.3.1 Ophalen ClausuleID met randomstring" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
      </con:settings>
      <con:endpoint>http://atlas4.ontwikkel.com/ClausuleWebApi/api/v1/clausules/{clausuleid}</con:endpoint>
      <con:request/>
      <con:assertion type="Valid HTTP Status Codes" id="6f463069-fd62-4f8d-b8e4-a9abf115f6b0" name="Valid HTTP Status Codes" disabled="true">
        <con:settings/>
        <con:configuration>
          <codes>400</codes>
        </con:configuration>
      </con:assertion>
      <con:assertion type="Simple Contains" id="e08ba8db-6fc1-4468-975d-e16bf70f0d43" name="Contains" disabled="true">
        <con:configuration>
          <token>parameters dictionary contains a null</token>
          <ignoreCase>false</ignoreCase>
          <useRegEx>false</useRegEx>
        </con:configuration>
      </con:assertion>
      <con:assertion type="Response SLA Assertion" name="Response SLA" id="3114efa0-9e07-4b6b-abc7-0700f04af491">
        <con:configuration>
          <SLA>200</SLA>
        </con:configuration>
      </con:assertion>
      <con:assertion type="Sensitive Information Exposure" id="650723f7-18d6-4dfd-b712-8fa309610042" name="Sensitive Information Exposure">
        <con:configuration>
          <AssertionSpecificExposureList>~(?s).*Runtime (E|e)rror.*###[Stacktrace] Can give hackers information about which software or language you are using</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*SQLSTATE: [A-Z0-9].*###[Database error messages] Internal database information can be misused by hackers</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*(s|S)tack:.*###[Stacktrace] Can give hackers information about which software or language you are using</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*(s|S)yntax (e|E)rror\s.*###[Stacktrace] Can give hackers information about which software or language you are using</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*\w+/\d{1,2}(\.\d{1,3})+.*###[Version x.y.z] Exposing version numbers gives
            unnecessary hints on your systems vulnerabilities</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*Invalid column name\s.*###[Database error messages] Internal database information can be misused by hackers</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*
            (ORA|EXP|IMP|KUP|UDE|UDI|DBV|LCD|QSM|OCI|RMAN|LFI|PLS|PLQ|AMD|CLSR|PROC|PROT|TNS|NNC|NLP|NNF|NMP|NCR|NZE|O2F|O2I|O2U|PCB|PCC|SQL|AUD|IMG|VID|DRG|LPX|LSX)-\d{5}\s
        .*###[Database error messages] Internal database information can be misused by hackers</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*(p|P)owered by:? ([a-zA-Z]+)( [a-zA-Z]+){0,3}( |/)\d\.\d{1,2}\.\d{1,3}.*###[Version x.y.z] Exposing version numbers gives
            unnecessary hints on your systems vulnerabilities</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*at [\w\$]+(\.[\w\$&lt;>\[\],]+|\.\.ctor)+(\((([\w\$&lt;>\`\[\]]+ [\w\$&lt;>]+, )*(([\w\$&lt;>\`\[\]]+
            [\w\$&lt;>]+)))\)|\(\))
        .*###[Stacktrace] Can give hackers information about which software or language you are using</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*&lt;\w+:frame\s*class=".*"\s*line=".*"\s*method=".*"\s*/>.*###[Stacktrace] Can give hackers information about which software or language you are using</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*Traceback \(most recent call last\):.*###[Stacktrace] Can give hackers information about which software or language you are using</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*((I|i)ncorrect|(I|i)nvalid) (s|S)yntax.*###[Stacktrace] Can give hackers information about which software or language you are using</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*(s|S)tack ?(t|T)race.*###[Stacktrace] Can give hackers information about which software or language you are using</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*(e|E)rror was:\s.*###[Database error messages] Internal database information can be misused by hackers</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*(v|V)ersion:? \d\.\d{1,2}\.{1,3}-?.*###[Version x.y.z] Exposing version numbers gives
            unnecessary hints on your systems vulnerabilities</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*from [\w\$]+(\.[\w\$&lt;>]+)+:\d+:in `.+'.*###[Stacktrace] Can give hackers information about which software or language you are using</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*Error in process &lt;\d+\.\d+\.\d+> with exit value:.*###[Stacktrace] Can give hackers information about which software or language you are using</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*STACK\s?TRACE.*###[Stacktrace] Can give hackers information about which software or language you are using</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*Warning: [\w]+\(\) .+ in .+ on line \d{1,6}.*###[Stacktrace] Can give hackers information about which software or language you are using</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*((A|a)pache|vBulletin|MySQL|PostgreSQL|phpBB|Internet Information Services)( |/)\d{1,2}(\.\d{1,3})+
        .*###[Version x.y.z] Exposing version numbers gives
            unnecessary hints on your systems vulnerabilities</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*at [a-zA-Z][\w\$]*(\.[a-zA-Z][\w\$]*)+\((Unknown Source|Native
            Method|[a-zA-Z][\w\$]*\.([a-zA-Z]{3,5}):\d+)\)
        .*###[Stacktrace] Can give hackers information about which software or language you are using</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*[^\s]+\.rb:\d+:in `.+'.*###[Stacktrace] Can give hackers information about which software or language you are using</AssertionSpecificExposureList>
          <AssertionSpecificExposureList>~(?s).*File ".+", line [0-9]{1,6}, in.*###[Stacktrace] Can give hackers information about which software or language you are using</AssertionSpecificExposureList>
          <IncludeProjectSpecific>true</IncludeProjectSpecific>
          <IncludeGlobal>false</IncludeGlobal>
        </con:configuration>
      </con:assertion>
      <con:credentials>
        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
        <con:authType>No Authorization</con:authType>
      </con:credentials>
      <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
      <con:jmsPropertyConfig/>
      <con:parameters>
        <con:parameter>
          <con:name>clausuleid</con:name>
          <con:value>vsdvd vwevwe vwevwe fv23r23343 23523534t3gsergerg</con:value>
          <con:style>TEMPLATE</con:style>
          <con:default>vsdvd vwevwe vwevwe fv23r23343 23523534t3gsergerg</con:default>
        </con:parameter>
      </con:parameters>
    </con:config>
  </con:testStep>
  <con:properties/>
  <con:reportParameters/>
  <con:breakPoints>
    <con:testStepId>26fa287f-f249-410c-86d5-a850c3d65b9a</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
</con:testCase>
